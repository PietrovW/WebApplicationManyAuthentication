version: '3.4'

volumes:
  postgres_data:
      driver: local

services:
  multiauthentication:
   image: ${DOCKER_REGISTRY-}multiauthentication
   build:
      context: .
      dockerfile: src/MultiAuthentication/Dockerfile
   environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - Jwt__Client=test_client
      - Jwt__Secret=M5rv0Q2bRqxz6R5IEyVquVWV2SiYLB8a
      - Jwt__AuthServerUrl=http://localhost:8080/auth/realms/Test
      - Jwt__Realm=test
   ports:
      - "80"
      - "443"
   volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  postgres:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password

  adminer:
        image: adminer
        restart: always
        ports:
          - 8081:8080

  keycloak:
      image: quay.io/keycloak/keycloak:latest
      volumes:
      - ./imports:/opt/jboss/keycloak/imports
      environment:
        KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: Pa55w0rd
      ports:
        - 8080:8080
      depends_on:
        - postgres